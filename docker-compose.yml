services:

  hubdb:
    image: postgres
    container_name: ${CONTAINER_POSTGRES}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - hubdb_data:/var/lib/postgresql/data
    networks:
      - hub
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio
    container_name: ${CONTAINER_MINIO}
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - hub
    restart: unless-stopped

  redis:
    image: redis
    container_name: ${CONTAINER_REDIS}
    networks:
      - hub
    restart: unless-stopped

  pgadmin4:
    image: dpage/pgadmin4
    container_name: ${CONTAINER_PGADMIN}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin4_data:/var/lib/pgadmin
    ports:
      - "8082:80"
    networks:
      - hub
    restart: unless-stopped

  fastapi_app:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: ${CONTAINER_FASTAPI}
    ports:
      - "8000:8000"
    networks:
      - hub
    restart: unless-stopped
    depends_on:
      - hubdb
      - redis
      - minio

  celery_app:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: ${CONTAINER_CELERY}
    networks:
      - hub
    restart: unless-stopped
    depends_on:
      - redis
      - hubdb
      - minio

networks:
  hub:
    external: true

volumes:
  hubdb_data:
  minio_data:
  pgadmin4_data:
